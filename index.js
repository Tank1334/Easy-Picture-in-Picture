javascript:(function()%7Bfunction findLargestPlayingVideo() %7Bconst videos %3D Array.from(document.querySelectorAll('video')).filter(video %3D> video.readyState !%3D 0).filter(video %3D> video.disablePictureInPicture %3D%3D false).sort((v1%2C v2) %3D> %7Bconst v1Rect %3D v1.getClientRects()%5B0%5D%7C%7C%7Bwidth%3A0%2Cheight%3A0%7D%3Bconst v2Rect %3D v2.getClientRects()%5B0%5D%7C%7C%7Bwidth%3A0%2Cheight%3A0%7D%3Breturn ((v2Rect.width * v2Rect.height) - (v1Rect.width * v1Rect.height))%3B%7D)%3Bif (videos.length %3D%3D%3D 0) %7Breturn%3B%7Dreturn videos%5B0%5D%3B%7Dasync function requestPictureInPicture(video) %7Bawait video.requestPictureInPicture()%3Bvideo.setAttribute('__pip__'%2C true)%3Bvideo.addEventListener('leavepictureinpicture'%2C event %3D> %7Bvideo.removeAttribute('__pip__')%3B%7D%2C %7B once%3A true %7D)%3Bnew ResizeObserver(maybeUpdatePictureInPictureVideo).observe(video)%3B%7Dfunction maybeUpdatePictureInPictureVideo(entries%2C observer) %7Bconst observedVideo %3D entries%5B0%5D.target%3Bif (!document.querySelector('%5B__pip__%5D')) %7Bobserver.unobserve(observedVideo)%3Breturn%3B%7Dconst video %3D findLargestPlayingVideo()%3Bif (video %26%26 !video.hasAttribute('__pip__')) %7Bobserver.unobserve(observedVideo)%3BrequestPictureInPicture(video)%3B%7D%7D(async () %3D> %7Bconst video %3D findLargestPlayingVideo()%3Bif (!video) %7Breturn%3B%7Dif (video.hasAttribute('__pip__')) %7Bdocument.exitPictureInPicture()%3Breturn%3B%7Dawait requestPictureInPicture(video)%3Bchrome.runtime.sendMessage(%7B message%3A 'enter' %7D)%3B%7D)()%7D)()
